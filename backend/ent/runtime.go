// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Minto312/passkey-practice/backend/ent/authhistory"
	"github.com/Minto312/passkey-practice/backend/ent/passkey"
	"github.com/Minto312/passkey-practice/backend/ent/schema"
	"github.com/Minto312/passkey-practice/backend/ent/session"
	"github.com/Minto312/passkey-practice/backend/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authhistoryFields := schema.AuthHistory{}.Fields()
	_ = authhistoryFields
	// authhistoryDescAuthenticatedAt is the schema descriptor for authenticated_at field.
	authhistoryDescAuthenticatedAt := authhistoryFields[2].Descriptor()
	// authhistory.DefaultAuthenticatedAt holds the default value on creation for the authenticated_at field.
	authhistory.DefaultAuthenticatedAt = authhistoryDescAuthenticatedAt.Default.(func() time.Time)
	// authhistoryDescID is the schema descriptor for id field.
	authhistoryDescID := authhistoryFields[0].Descriptor()
	// authhistory.DefaultID holds the default value on creation for the id field.
	authhistory.DefaultID = authhistoryDescID.Default.(func() uuid.UUID)
	passkeyFields := schema.Passkey{}.Fields()
	_ = passkeyFields
	// passkeyDescCreatedAt is the schema descriptor for created_at field.
	passkeyDescCreatedAt := passkeyFields[4].Descriptor()
	// passkey.DefaultCreatedAt holds the default value on creation for the created_at field.
	passkey.DefaultCreatedAt = passkeyDescCreatedAt.Default.(func() time.Time)
	// passkeyDescLastUsedAt is the schema descriptor for last_used_at field.
	passkeyDescLastUsedAt := passkeyFields[5].Descriptor()
	// passkey.DefaultLastUsedAt holds the default value on creation for the last_used_at field.
	passkey.DefaultLastUsedAt = passkeyDescLastUsedAt.Default.(func() time.Time)
	// passkey.UpdateDefaultLastUsedAt holds the default value on update for the last_used_at field.
	passkey.UpdateDefaultLastUsedAt = passkeyDescLastUsedAt.UpdateDefault.(func() time.Time)
	// passkeyDescID is the schema descriptor for id field.
	passkeyDescID := passkeyFields[0].Descriptor()
	// passkey.DefaultID holds the default value on creation for the id field.
	passkey.DefaultID = passkeyDescID.Default.(func() uuid.UUID)
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionFields[1].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescID is the schema descriptor for id field.
	sessionDescID := sessionFields[0].Descriptor()
	// session.DefaultID holds the default value on creation for the id field.
	session.DefaultID = sessionDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
